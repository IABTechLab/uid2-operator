name: E2E GCP OIDC Enclave
on:
  workflow_dispatch:
    inputs:
      operator_image_hash:
        description: 'The hash of GCP enclave image'
        type: string
        required: true
      core_image_version:
        description: 'The version of UID2 core image'
        type: string
        default: '2.9.0-46b2d8519f-master-default'
      optout_image_version:
        description: 'The version of UID2 optout image'
        type: string
        default: '2.5.0-80ad3156c0-default'

env:
  REGISTRY: ghcr.io

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: Checkout full history
        uses: actions/checkout@v3

      - name: Checkout uid2-core repo
        uses: actions/checkout@v3
        with:
          repository: IABTechLab/uid2-core
          token: ${{ secrets.GHCR_PAT }}
          path: core

      - name: Checkout uid2-optout repo
        uses: actions/checkout@v3
        with:
          repository: IABTechLab/uid2-optout
          token: ${{ secrets.GHCR_PAT }}
          path: optout
          ref: ysh-e2e-config-optout

      - name: Bring up ngrok
        id: ngrok
        env:
          NGROK_TOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
        run: |
          cd ./e2e && bash ./setup_ngrok.sh

      - name: Prepare GCP enclave metadata
        id: metadata
        env:
          IMAGE_HASH: ${{ inputs.operator_image_hash }}
        run: |
          cd ./e2e && bash ./prepare_gcp_enclave_metadata.sh

      - name: Log in to the Docker container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          # we use personal access token here since we need to pull images from private repo (core)
          password: ${{ secrets.GHCR_PAT }}

      - name: Prepare conf files
        env:
          CORE_ROOT: '../core'
          OPTOUT_ROOT: '../optout'
        run: |
          cd ./e2e && bash ./prepare_conf.sh

      - name: Bring up docker compose
        id: docker-compose
        env:
          NGROK_URL_LOCALSTACK: ${{ steps.ngrok.outputs.NGROK_URL_LOCALSTACK }}
          NGROK_URL_CORE: ${{ steps.ngrok.outputs.NGROK_URL_CORE }}
          NGROK_URL_OPTOUT: ${{ steps.ngrok.outputs.NGROK_URL_OPTOUT }}
          CORE_VERSION: ${{ inputs.core_image_version }}
          OPTOUT_VERSION: ${{ inputs.optout_image_version }}
        run: |
          cd ./e2e && bash ./start_docker.sh

      - name: Bring up GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIAL }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Start GCP private operator
        id: start_gcp
        env:
          NGROK_URL_CORE: ${{ steps.ngrok.outputs.NGROK_URL_CORE }}
          NGROK_URL_OPTOUT: ${{ steps.ngrok.outputs.NGROK_URL_OPTOUT }}
          IMAGE_HASH: ${{ inputs.operator_image_hash }}
          OPERATOR_KEY: ${{ steps.metadata.outputs.OPERATOR_KEY }}
        run: |
          cd ./e2e && bash ./start_gcp_enclave.sh

      - name: Stop GCP private operator
        if: always()
        env:
          GCP_INSTANCE_NAME: ${{ steps.start_gcp.outputs.GCP_INSTANCE_NAME }}
        run: |
          cd ./e2e && bash ./stop_gcp_enclave.sh
