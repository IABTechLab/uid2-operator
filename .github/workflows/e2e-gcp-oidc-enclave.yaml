name: E2E GCP OIDC Enclave
on:
  workflow_dispatch:
    inputs:
      operator_image_hash:
        description: 'The hash of GCP enclave image'
        type: string
        required: true
      core_image_hash:
        description: 'The hash of UID2 core image'
        type: string
        default: '11'

env:
  REGISTRY: ghcr.io

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: Checkout full history
        uses: actions/checkout@v3
        with:
          # git-restore-mtime requires full git history. The default fetch-depth value (1) creates a shallow checkout.
          fetch-depth: 0

      - name: bring up ngrok
        id: ngrok
        env:
          NGROK_TOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
        run: |
          cd ./e2e
          bash ./setup_ngrok.sh

      - name: Prepare GCP enclave metadata
        id: metadata
        env:
          IMAGE_HASH: ${{ inputs.operator_image_hash }}
        run: |
          bash ./prepare_gcp_enclave_metadata.sh

      - name: Log in to the Docker container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          # we use personal access token here since we need to pull images from private repo (core)
          password: ${{ secrets.GHCR_PAT }}

      - name: Bring up docker compose
        id: docker-compose
        env:
          NGROK_URL_LOCALSTACK: ${{ steps.ngrok.outputs.NGROK_URL_LOCALSTACK }}
          NGROK_URL_OPTOUT: ${{ steps.ngrok.outputs.NGROK_URL_OPTOUT }}
        run: |
          bash ./start_docker.sh
          echo --- Start docker-compose ---
          echo ${{ steps.metadata.outputs.OPERATOR_KEY }}
          echo ${{ steps.metadata.outputs.ENCLAVE_ID }}
          docker compose -f ./e2e/docker-compose.yml up -d
          echo --- Finished docker-compose ---

      - name: Bring up GCP private operator
        env:
          NGROK_URL_CORE: ${{ steps.ngrok.outputs.NGROK_URL_CORE }}
          NGROK_URL_OPTOUT: ${{ steps.ngrok.outputs.NGROK_URL_OPTOUT }}
          IMAGE_HASH: ${{ inputs.operator_image_hash }}
        run: |
          echo "NGROK_URL_CORE=$NGROK_URL_CORE"
          echo "NGROK_URL_OPTOUT=$NGROK_URL_OPTOUT"
          echo "IMAGE_HASH=$IMAGE_HASH"

      - name: Sleep for 10m
        uses: jakejarvis/wait-action@master
        with:
          time: '600s'
