name: E2E GCP OIDC Enclave
on:
  workflow_dispatch:
    inputs:
      operator_image_hash:
        description: 'The hash of GCP enclave image'
        type: string
        required: true
      core_image_hash:
        description: 'The hash of UID2 core image'
        type: string
        default: '11'

env:
  REGISTRY: ghcr.io

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: Checkout full history
        uses: actions/checkout@v3
        with:
          # git-restore-mtime requires full git history. The default fetch-depth value (1) creates a shallow checkout.
          fetch-depth: 0

      - name: Prepare GCP enclave metadata
        id: metadata
        env:
          IMAGE_HASH: ${{ inputs.operator_image_hash }}
        run: |
          bash ./e2e/prepare_gcp_enclave_metadata.sh

      - name: Log in to the Docker container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          # we use personal access token here since we need to pull images from private repo (core)
          password: ${{ secrets.GHCR_PAT }}

      - name: Bring up dependencies
        run: |
          echo --- Start docker-compose ---
          echo ${{ steps.metadata.outputs.OPERATOR_KEY }}
          echo ${{ steps.metadata.outputs.ENCLAVE_ID }}
          docker compose -f ./e2e/docker-compose.yml up -d
          echo --- Finished docker-compose ---
#
#      - name: Check core service URL
#        uses: jtalk/url-health-check-action@v3
#        with:
#          url: http://localhost:8088/ops/healthcheck
#          max-attempts: 5
#          retry-delay: 5s

      - uses: luisboto/ngrok-tunnel-action@v0.1.7.2
        with:
          timeout: 1h
          port: 8088
          ngrok_authtoken: ${{ secrets.NGROK_AUTHTOKEN }}
          tunnel_type: http
          save_url_to_filename: tunnelURL.md

      - name: Debug
        run: |
          echo --- Check TempURl ---
          echo TempURl: $(cat tunnelURL.md)


      - name: Sleep for 10m
        uses: jakejarvis/wait-action@master
        with:
          time: '600s'
