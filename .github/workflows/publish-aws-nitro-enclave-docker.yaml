name: Publish AWS Nitro Operator
run-name: ${{ format('Publish {0} AWS Nitro Operator', inputs.release_type) }}
on:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        description: The type of release
        options:
          - Major
          - Minor
          - Patch
          - Snapshot
      version_number_input:
        description: If set, the version number will not be incremented and the given number will be used.
        type: string
        default: ''
  workflow_call:
    inputs:
      release_type:
        description: The type of version number to return. Must be one of [Snapshot, Patch, Minor or Major]
        required: true
        type: string
      version_number_input:
        description: If set, the version number will not be incremented and the given number will be used.
        type: string
        default: ''

    outputs:
      pcr0:
        description: The EIF PCR0
        value: ${{ jobs.buildImage.outputs.pcr0 }}

env:
  ENCLAVE_PROTOCOL: aws-nitro
  ARTIFACTS_BASE_OUTPUT_DIR: ${{ github.workspace }}/deployment-artifacts

jobs:
  buildImage:
    name: Build Image
    runs-on: ubuntu-latest
    outputs:
      pcr0: ${{ steps.showPCR0.outputs.PCR0 }}
    steps:
      - name: Check branch and release type
        id: checkRelease
        uses: IABTechLab/uid2-shared-actions/actions/check_branch_and_release_type@v2.2.2
        with:
          release_type: ${{ inputs.release_type }}

      - name: Free up space - delete preinstalled tools
        run: |
          rm -rf /opt/hostedtoolcache

      - name: Show Context
        run: |
          printenv
          echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          IS_RELEASE: ${{ steps.checkRelease.outputs.IS_RELEASE }}

      - name: Checkout full history on Main
        uses: actions/checkout@v4
        if: ${{ inputs.version_number_input == '' }}
        with:
          # git-restore-mtime requires full git history. The default fetch-depth value (1) creates a shallow checkout.
          fetch-depth: 0

      - name: Checkout full history at tag v${{ inputs.version_number_input }}
        uses: actions/checkout@v4
        if: ${{ inputs.version_number_input != '' }}
        with:
          ref: v${{ inputs.version_number_input }}
          # git-restore-mtime requires full git history. The default fetch-depth value (1) creates a shallow checkout.
          fetch-depth: 0

      - name: Restore timestamps
        uses: thetradedesk/git-restore-mtime-action@v1.2

      - name: Set version number
        id: version
        uses: IABTechLab/uid2-shared-actions/actions/version_number@main
        with:
          type: ${{ inputs.release_type }}
          version_number: ${{ inputs.version_number_input }}
          branch_name: ${{ github.ref }}

      - name: Update pom.xml
        id: updatePom
        run: |
          current_version=$(grep -o '<version>.*</version>' pom.xml | head -1 | sed 's/<version>\(.*\)<\/version>/\1/')
          new_version=${{ steps.version.outputs.new_version }} 
          sed -i "0,/$current_version/s/$current_version/$new_version/" pom.xml
          echo "Version number updated from $current_version to $new_version"
          echo "image_tag=${{ steps.version.outputs.new_version }}-${{ env.ENCLAVE_PROTOCOL }}" >> $GITHUB_OUTPUT

      - name: Commit pom.xml and version.json
        if: ${{ inputs.version_number_input == '' && steps.checkRelease.outputs.IS_RELEASE != 'true' }}
        uses: EndBug/add-and-commit@v9
        with:
          add: 'pom.xml version.json'
          author_name: Release Workflow
          author_email: unifiedid-admin+release@thetradedesk.com
          message: 'Released ${{ inputs.release_type }} version: ${{ steps.version.outputs.new_version }}'

      - name: Commit pom.xml, version.json and set tag
        if: ${{ inputs.version_number_input == '' && steps.checkRelease.outputs.IS_RELEASE == 'true' }}
        uses: EndBug/add-and-commit@v9
        with:
          add: 'pom.xml version.json'
          author_name: Release Workflow
          author_email: unifiedid-admin+release@thetradedesk.com
          message: 'Released ${{ inputs.release_type }} version: ${{ steps.version.outputs.new_version }}'
          tag: v${{ steps.version.outputs.new_version }}

      - name: Build UID2 AWS EIF
        uses: IABTechLab/uid2-operator/.github/actions/build_aws_eif@main
        with:
          identity_scope: uid2
          artifacts_base_output_dir: ${{ env.ARTIFACTS_BASE_OUTPUT_DIR }}

      - name: Build EUID AWS EIF
        uses: IABTechLab/uid2-operator/.github/actions/build_aws_eif@main
        with:
          identity_scope: euid
          artifacts_base_output_dir: ${{ env.ARTIFACTS_BASE_OUTPUT_DIR }}

      - uses: actions/upload-artifact@v3
        with:
          name: aws-nitro-deployment-files
          path: ${{ env.ARTIFACTS_BASE_OUTPUT_DIR }}
          if-no-files-found: error
