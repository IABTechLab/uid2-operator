name: Publish Docker
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The tag to apply to the Docker file'
        type: string
      cloud_provider:
        description: 'Must be one of [aws, gcp, azure, default]'
        required: false
        default: 'default'
        type: string
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-publish-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      jar_version: ${{ steps.package.outputs.jar_version }}
    steps:
      - name: Checkout Full history
        uses: actions/checkout@v2
        with:
          # git-restore-mtime requires full git history. The default fetch-depth value (1) creates a shallow checkout.
          fetch-depth: 0
      - name: Restore Timestamps
        uses: thetradedesk/git-restore-mtime-action@v1
      # Build and Run Unit Tests
      - name: Package Jar 
        id: package
        run: |
          mvn -B package -P ${{ github.event.inputs.cloud_provider }} 
          echo "::set-output name=jar_version::$(mvn help:evaluate -Dexpression=project.version | grep -e '^[1-9][^\[]')"
          echo "::set-output name=git_commit::$(git show --format="%h" --no-patch)"
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=${{ steps.package.outputs.jar_version }}-,suffix=-${{ github.event.inputs.cloud_provider }},format=short
            type=raw,value=${{ github.event.inputs.tag }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            JAR_VERSION=${{ steps.package.outputs.jar_version }}
            IMAGE_VERSION=${{ steps.package.outputs.jar_version }}-${{ steps.package.outputs.git_commit }}
