name: Publish Public Operator
run-name: ${{ format('Publish {0} Public Operator', inputs.release_type) }}
on:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        description: The type of release
        options:
        - Major
        - Minor
        - Patch
        - Snapshot
      version_number_input:
        description: If set, the version number will not be incremented and the given number will be used.
        type: string
        default: ''
      vulnerability_severity:
        description: The severity to fail the workflow if such vulnerability is detected. DO NOT override it unless a Jira ticket is raised. Must be one of ['CRITICAL', 'CRITICAL,HIGH' or 'CRITICAL,HIGH,MEDIUM'] (without space in between).
        type: string
        default: 'CRITICAL,HIGH'

  workflow_call:
    inputs:
      release_type:
        description: The type of version number to return. Must be one of [Snapshot, Patch, Minor or Major]
        required: true
        type: string
      version_number_input:
        description: If set, the version number will not be incremented and the given number will be used.
        type: string
        default: ''

    outputs:
      image_tag:
        description: The tag used to describe the image in Docker
        value: ${{ jobs.Image.outputs.image_tag }}

jobs:
  image:
    name: Image
    uses: IABTechLab/uid2-shared-actions/.github/workflows/shared-publish-docker-versioned.yaml@kcc-UID2-2888-address-high-vulnerability
    with:
      release_type: ${{ inputs.release_type }}
      version_number_input: ${{ inputs.version_number_input }}
      cloud_provider: 'default'
      force_release: 'no' # Do not create a release for the component builds, will be created by the parent
      vulnerability_severity: ${{ inputs.vulnerability_severity }}
    secrets: inherit

  e2e:
    name: E2E
    uses: ./.github/workflows/run-e2e-tests-on-operator.yaml
    needs: image
    with:
      operator_image_version: ${{ needs.image.outputs.image_tag }}
      operator_branch: ${{ github.ref }}
    secrets: inherit

  collectAllArtifacts:
    name: Collect All Artifacts
    runs-on: ubuntu-latest
    needs: [image, e2e]
    steps:
      - name: Collect artifacts
        run: |
          mkdir -p image-details
          IMAGE_TAG=${{ needs.image.outputs.image_tag }}
          IMAGE=$(jq -n --arg img "$IMAGE_TAG" '{image_tag: $img}')
          echo $IMAGE > image-details/image.json

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: image-details
          path: image-details/
