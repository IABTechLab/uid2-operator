name: Kat test pipeline
on:
  pull_request:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        description: 'The type of release'
        options:
          - Major
          - Minor
          - Patch
          - Snapshot
      operator_image_version:
        description: 'The version of UID2 operator image'
        type: string
        default: 'latest'
      core_image_version:
        description: 'The version of UID2 core image'
        type: string
        default: '2.15.8-d2e5469826-default'
      optout_image_version:
        description: 'The version of UID2 optout image'
        type: string
        default: '2.7.3-4f813a8ad9-default'
      e2e_image_version:
        description: 'The version of E2E image'
        type: string
        default: 'latest'

env:
  REGISTRY: ghcr.io

jobs:
  start:
    name: Start Operator Build
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: Show Context
        run: |
          printenv
          echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

  e2e-test:
    name: E2E Test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
      id-token: write
    steps:
      - name: Log in to the Docker container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          # we use personal access token here since we need to pull images from private repo (core)
          password: ${{ secrets.GHCR_PAT }}

      - name: Checkout full history
        uses: actions/checkout@v3

      - name: Checkout uid2-core repo
        uses: actions/checkout@v3
        with:
          repository: IABTechLab/uid2-core
          token: ${{ secrets.GHCR_PAT }}
          path: core

      - name: Checkout uid2-optout repo
        uses: actions/checkout@v3
        with:
          repository: IABTechLab/uid2-optout
          token: ${{ secrets.GHCR_PAT }}
          path: optout

      - name: Checkout uid2-admin repo
        uses: actions/checkout@v3
        with:
          repository: IABTechLab/uid2-admin
          token: ${{ secrets.GHCR_PAT }}
          path: admin

      - name: Bring up docker compose
        id: docker-compose
        env:
          CORE_ROOT: '../core'
          OPTOUT_ROOT: '../optout'
          ADMIN_ROOT: '../admin'
          NGINX_ROOT: '../conf'
          CORE_VERSION: ${{ inputs.core_image_version }}
          OPTOUT_VERSION: ${{ inputs.optout_image_version }}
          OPERATOR_VERSION: ${{ inputs.operator_image_version }}
          E2E_VERSION: ${{ inputs.e2e_image_version }}
        run: |
          cd ./e2e && bash ./docker-build-public.sh

      - name: Check out the E2E repo
        uses: actions/checkout@v3
        with:
          repository: IABTechLab/uid2-e2e
          token: ${{ secrets.GHCR_PAT }}
          path: github-e2e-test

      - name: Run E2E tests
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/iabtechlab/uid2-e2e:latest
          options: --network e2e_default
          run: |
            export UID2_E2E_ENV="github-test-pipeline"
            export UID2_E2E_SITE_ID="999"
            export UID2_E2E_API_KEY="UID2-C-L-999-fCXrMM.fsR3mDqAXELtWWMS+xG1s7RdgRTMqdOH2qaAo="
            export UID2_E2E_API_SECRET="DzBzbjTJcYL0swDtFs2krRNu+g1Eokm2tBU4dEuD0Wk="
            export UID2_E2E_API_KEY_OLD="UID2-C-L-1000-qxpBsF.ibeCDBpD2bq4Zm7inDacGioUk1aaLeNJrabow="
            export UID2_E2E_API_SECRET_OLD="VT7+t0G/RVueMuVZAL56I2c3JJFSYQfhbu8yo0V/Tds="
            export UID2_E2E_IDENTITY_SCOPE="UID2"
            export UID2_E2E_PHONE_SUPPORT="true"
            export UID2_E2E_PIPELINE_OPERATOR_TYPE="PUBLIC"
            export UID2_E2E_PIPELINE_OPERATOR_URL="http://publicoperator:8080"
            export UID2_E2E_PIPELINE_OPERATOR_CLOUD_PROVIDER="PUBLIC"
            if [ "$UID2_E2E_PIPELINE_OPERATOR_TYPE" != "PUBLIC" ] && [ "$UID2_E2E_PIPELINE_OPERATOR_TYPE" != "PRIVATE" ] ; then
              echo "ERROR: Incorrect operator type: $UID2_E2E_PIPELINE_OPERATOR_TYPE"
            elif [ "$UID2_E2E_PIPELINE_OPERATOR_TYPE" = "PUBLIC" ] ; then
              mvn test -Dtest="E2EPublicOperatorTestSuite"
            else
              mvn test -Dtest="E2EPrivateOperatorTestSuite"
            fi
