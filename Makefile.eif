CONFIG_DIR=/etc/uid2operator
DATA_DIR=/opt/uid2operator

.PHONY: all

all: build_eif

##################################################################################################################################################################

# EIF

.PHONY: build_eif

build_eif: uid2operator.eif euidoperator.eif

uid2operator.eif: build_artifacts build_configs build/proxies.nitro.yaml build/syslog-ng-client.conf build/syslog-ng-core_4.6.0-1_amd64.deb build/syslog-ng-ose-pub.asc build/entrypoint.sh build/vsockpx build/Dockerfile
	cd build; docker build -t uid2operator . --build-arg JAR_VERSION=`cat package.version` --build-arg IMAGE_VERSION=`cat package.version`-`git show --format="%h" --no-patch`; docker save -o ./uid2operator.tar uid2operator; docker cp ./uid2operator.tar amazonlinux:/uid2operator.tar; rm -f ./uid2operator.tar
	docker exec amazonlinux bash aws_nitro_eif.sh uid2operator

euidoperator.eif: build_artifacts build_configs build/proxies.nitro.yaml build/syslog-ng-client.conf build/syslog-ng-core_4.6.0-1_amd64.deb build/syslog-ng-ose-pub.asc build/entrypoint.sh build/vsockpx build/Dockerfile
	cd build; docker build -t euidoperator . --build-arg IDENTITY_SCOPE='EUID' --build-arg JAR_VERSION=`cat package.version` --build-arg IMAGE_VERSION=`cat package.version`-`git show --format="%h" --no-patch`; docker save -o ./euidoperator.tar euidoperator; docker cp ./euidoperator.tar amazonlinux:/euidoperator.tar; rm -f ./euidoperator.tar
	docker exec amazonlinux bash aws_nitro_eif.sh euidoperator


##################################################################################################################################################################

# Configs

.PHONY: build_configs

build_configs: build/conf/default-config.json build/conf/feat-flag.json build/conf/euid-integ-config.json build/conf/euid-prod-config.json build/conf/uid2-integ-config.json build/conf/uid2-prod-config.json build/conf/logback.xml build/conf/logback-debug.xml

build/conf/default-config.json: build_artifacts ./scripts/aws/conf/default-config.json
	cp ./scripts/aws/conf/default-config.json ./build/conf/

build/conf/feat-flag.json: build_artifacts ./scripts/aws/conf/feat-flag/feat-flag.json
	cp ./scripts/aws/conf/feat-flag/feat-flag.json ./build/conf/

build/conf/euid-integ-config.json: build_artifacts ./scripts/aws/conf/euid-integ-config.json
	cp ./scripts/aws/conf/euid-integ-config.json ./build/conf/

build/conf/euid-prod-config.json: build_artifacts ./scripts/aws/conf/euid-prod-config.json
	cp ./scripts/aws/conf/euid-prod-config.json ./build/conf/

build/conf/uid2-integ-config.json: build_artifacts ./scripts/aws/conf/uid2-integ-config.json
	cp ./scripts/aws/conf/uid2-integ-config.json ./build/conf/

build/conf/uid2-prod-config.json: build_artifacts ./scripts/aws/conf/uid2-prod-config.json
	cp ./scripts/aws/conf/uid2-prod-config.json ./build/conf/

build/conf/logback.xml: build_artifacts ./scripts/aws/conf/logback.xml
	cp ./scripts/aws/conf/logback.xml ./build/conf/

build/conf/logback-debug.xml: build_artifacts ./scripts/aws/conf/logback-debug.xml
	cp ./scripts/aws/conf/logback-debug.xml ./build/conf/

build/Dockerfile: build_artifacts ./scripts/aws/Dockerfile
	cp ./scripts/aws/Dockerfile ./build/

build/proxies.nitro.yaml: build_artifacts ./scripts/aws/proxies.nitro.yaml
	cp ./scripts/aws/proxies.nitro.yaml ./build/

build/syslog-ng-client.conf: build_artifacts ./scripts/aws/syslog-ng/syslog-ng-client.conf
	cp ./scripts/aws/syslog-ng/syslog-ng-client.conf ./build/

build/syslog-ng-core_4.6.0-1_amd64.deb: build_artifacts ./scripts/aws/syslog-ng/client/syslog-ng-core_4.6.0-1_amd64.deb
	cp ./scripts/aws/syslog-ng/client/syslog-ng-core_4.6.0-1_amd64.deb ./build/

build/syslog-ng-ose-pub.asc: build_artifacts ./scripts/aws/syslog-ng/client/syslog-ng-ose-pub.asc
	cp ./scripts/aws/syslog-ng/client/syslog-ng-ose-pub.asc ./build/

build/entrypoint.sh: build_artifacts
	cp ./scripts/aws/entrypoint.sh ./build/

##################################################################################################################################################################

# Artifacts

.PHONY: build_artifacts

build_artifacts: build/build_artifacts.stamp

build/build_artifacts.stamp: Dockerfile.nitro.builder
	docker build -t uid2-nitro-builder -f Dockerfile.nitro.builder .
	docker create --name uid2-nitro-builder uid2-nitro-builder
	docker cp uid2-nitro-builder:/build .
	docker rm uid2-nitro-builder
	mkdir -p build/conf
	touch build/build_artifacts.stamp
