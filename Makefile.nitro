CONFIG_DIR=/etc/uid2operator
DATA_DIR=/opt/uid2operator

.PHONY: all
all: build_eif

install: ./build/uid2operator.eif ./build/dante-1.4.3/sockd ./scripts/aws/start.sh ./scripts/aws/stop.sh ./scripts/aws/allocator.template.yaml ./scripts/aws/proxies.host.yaml ./scripts/aws/uid2operator.service ./build/dependencies/vsockpx
	mkdir -p $(CONFIG_DIR)
	mkdir -p $(DATA_DIR)
	cp ./scripts/aws/proxies.host.yaml $(CONFIG_DIR)/proxy.yaml
	cp ./scripts/aws/allocator.template.yaml $(CONFIG_DIR)/
	cp ./build/uid2operator.eif $(DATA_DIR)/
	cp ./scripts/aws/start.sh $(DATA_DIR)/start.sh
	cp ./scripts/aws/stop.sh $(DATA_DIR)/stop.sh
	cp ./scripts/aws/uid2operator.service /etc/systemd/system/
	cp ./build/dependencies/vsockpx /usr/bin/
	cp ./scripts/aws/sockd.conf /etc/
	cp ./build/dante-1.4.3/sockd/sockd /usr/bin
	chmod +x /usr/bin/vsockpx

uninstall:
	rm -rf $(CONFIG_DIR)
	rm -rf $(DATA_DIR)
	rm /usr/bin/vsockpx
	rm /etc/systemd/system/uid2operator.service

clean:
	rm -rf build

./build/dante-1.4.3/sockd:
	cd build; wget https://www.inet.no/dante/files/dante-1.4.3.tar.gz
	cd build; tar -xf dante-1.4.3.tar.gz
	cd build/dante-1.4.3; ./configure
	cd build/dante-1.4.3; make

package: build_eif ./scripts/aws/start.sh ./scripts/aws/stop.sh ./scripts/aws/allocator.template.yaml ./scripts/aws/proxies.host.yaml ./scripts/aws/uid2operator.service
	

build_eif: build_artifacts build/proxies.nitro.yaml build/entrypoint.sh build/dependencies/vsockpx build/Dockerfile build/conf/prod-config.json
	cd build; docker build -t uid2operator .
	cd build; nitro-cli build-enclave --docker-uri uid2operator --output-file uid2operator.eif

build/conf/prod-config.json: build_artifacts ./scripts/aws/conf/prod-config.json
	cp ./scripts/aws/conf/prod-config.json ./build/conf/prod-config.json

build/Dockerfile: build_artifacts ./scripts/aws/Dockerfile
	cp ./scripts/aws/Dockerfile ./build/

build/proxies.nitro.yaml: build_artifacts ./scripts/aws/proxies.nitro.yaml
	cp ./scripts/aws/proxies.nitro.yaml ./build/
	
build/entrypoint.sh: build_artifacts
	cp ./scripts/aws/entrypoint.sh ./build/

build_artifacts: Dockerfile.nitro.builder
	docker build -t uid2-nitro-builder -f Dockerfile.nitro.builder .
	docker cp $(shell docker create --rm uid2-nitro-builder):/build .

setup_dependencies: 
	enclave_platform="aws-nitro" ./setup_dependencies.sh

.PHONY: install uninstall setup_nitro setup_dependencies build_artifacts build_eif package
