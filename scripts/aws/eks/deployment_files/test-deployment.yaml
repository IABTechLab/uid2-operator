apiVersion: v1
kind: Service
metadata:
  labels:
    app: operator
  name: operator-service
  namespace: compute
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: operator
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    env: test
    tmp: tmp
  labels:
    app: operator
    enclave: "true"
    flavor: operator
  name: operator
  namespace: compute
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: operator
      enclave: "true"
      flavor: operator
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        env: test
      labels:
        app: operator
        enclave: "true"
        flavor: operator
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: aws-nitro-enclaves-k8s-dp
                operator: In
                values:
                - enabled
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: enclave
                operator: In
                values:
                - "true"
            topologyKey: kubernetes.io/hostname
      containers:
      - image: ghcr.io/iabtechlab/uid2-operator-eks-uid2:5.40.48.100
        imagePullPolicy: Always
        name: operator
        ports:
        - containerPort: 80
          protocol: TCP
        - containerPort: 9080
          name: prometheus
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ops/healthcheck
            port: 80
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            aws.ec2.nitro/nitro_enclaves: "1"
            cpu: "1"
            hugepages-1Gi: 48Gi
          requests:
            aws.ec2.nitro/nitro_enclaves: "1"
            cpu: "1"
            hugepages-1Gi: 48Gi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /ops/healthcheck
            port: 80
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config/config-values
          name: configmap
          readOnly: true
        - mountPath: /etc/secret/secret-value
          name: secret-volume
          readOnly: true
        - mountPath: /dev/hugepages
          name: hugepage
          readOnly: false
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: gh-uid2-docker
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: configmap
        projected:
          sources:
          - configMap:
              name: operator-and-validator-operators-configmap
      - emptyDir:
          medium: HugePages-1Gi
        name: hugepage
      - name: secret-volume
        secret:
          secretName: operator-secrets
