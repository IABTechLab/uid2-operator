{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "defaultValue": "uid2-operator",
      "metadata": {
        "description": "Name for the container group"
      }
    },
    "image": {
      "type": "string",
      "metadata": {
        "description": "Image for the operator container"
      }
    },
    "identity": {
      "type": "string",
      "defaultValue": "uid-operator",
      "metadata": {
        "description": "ManagedIdentity to launch the container"
      }
    },
    "vault-name": {
      "type": "string",
      "metadata": {
        "description": "Vault name"
      }
    },
    "operator-key-secret-name": {
      "type": "string",
      "metadata": {
        "description": "Operator key secret name"
      }
    },
    "deployment-environment": {
      "type": "string",
      "metadata": {
        "description": "Deployment environment"
      }
    },
    "core-base-url": {
      "type": "string",
      "metadata": {
        "description": "UID2 core base url override"
      }
    },
    "optout-base-url": {
      "type": "string",
      "metadata": {
        "description": "UID2 optout base url override"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2023-05-01",
      "name": "[parameters('name')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "userAssigned",
        "userAssignedIdentities": {
          "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',parameters('identity'))]": {}
        }
      },
      "properties": {
        "confidentialComputeProperties": {
          "ccePolicy": ""
        },
        "containers": [
          {
            "name": "skr",
            "properties": {
              "image": "mcr.microsoft.com/aci/skr:2.3",
              "command": [
                "/skr.sh"
              ],
              "ports": [
                {
                  "port": 9000
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1
                }
              },
              "environmentVariables": [
                {
                  "name": "Port",
                  "value": "9000"
                }
              ]
            }
          },
          {
            "name": "uid2-operator",
            "properties": {
              "image": "[parameters('image')]",
              "ports": [
                {
                  "port": 8080,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 4,
                  "memoryInGB": 16
                }
              },
              "environmentVariables": [
                {
                  "name": "VAULT_NAME",
                  "value": "[parameters('vault-name')]"
                },
                {
                  "name": "OPERATOR_KEY_SECRET_NAME",
                  "value": "[parameters('operator-key-secret-name')]"
                },
                {
                  "name": "DEPLOYMENT_ENVIRONMENT",
                  "value": "[parameters('deployment-environment')]"
                },
                {
                  "name": "CORE_BASE_URL",
                  "value": "[parameters('core-base-url')]"
                },
                {
                  "name": "OPTOUT_BASE_URL",
                  "value": "[parameters('optout-base-url')]"
                }
              ]
            }
          }
        ],
        "sku": "Confidential",
        "osType": "Linux",
        "restartPolicy": "Never",
        "ipAddress": {
          "type": "Public",
          "ports": [
            {
              "port": "8080",
              "protocol": "TCP"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "containerIPv4Address": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups', parameters('name'))).ipAddress.ip]"
    }
  }
}
